name: Retrain Model on Data Update

on:
  push:
    branches:
      - master
    paths:
      - 'data/**'
      - 'params.yaml'
      - 'src/**'
      - 'dvc.yaml'
      - '*.dvc'

# NEW: Add concurrency control
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  retrain:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache DVC
        uses: actions/cache@v4
        with:
          path: .dvc/cache
          key: ${{ runner.os }}-dvc-${{ hashFiles('dvc.lock') }}
          restore-keys: |
            ${{ runner.os }}-dvc-

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install dvc[s3]

      - name: Pull latest data from DVC remote
        run: |
          dvc pull -r mlops_remote

      - name: Reproduce DVC pipeline (retrain)
        run: |
          dvc repro

      - name: Push new model and artifacts to DVC remote
        run: |
          dvc push -r mlops_remote

      - name: Commit updated DVC metadata
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git add dvc.lock
          git commit -m "Auto retrain model (via GitHub Action)" || echo "No changes to commit"
          git push origin master

      - name: Trigger deployment workflow
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: "model-retrained"